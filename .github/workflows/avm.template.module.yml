name: "avm.template.module"

on:
  workflow_call:
    inputs:
      workflowInput:
        type: string
        description: "Input from the workflow caller in JSON format"
        required: true
      moduleTestFilePaths:
        type: string
        description: "List of relative path to the module test files in JSON format"
        required: true
      modulePath:
        type: string
        description: "Relative path to the module folder"
        required: true

permissions:
  id-token: write # For OIDC
  contents: write # For release tags

env:
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_MGMTGROUP_ID: "${{ secrets.ARM_MGMTGROUP_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  TOKEN_NAMEPREFIX: "${{ secrets.TOKEN_NAMEPREFIX }}"

jobs:
  #########################
  #   PSRule validation   #
  #########################
  job_psrule_test:
    name: "PSRule validation"
    runs-on: ubuntu-20.04
    if: (fromJson(inputs.workflowInput)).staticValidation == 'true'
    strategy:
      fail-fast: false
      matrix:
        moduleTestFilePaths: ${{ fromJson(inputs.moduleTestFilePaths) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set environment
        uses: ./.github/actions/templates/avm-setEnvironment
      - name: Set PSRule validation
        uses: ./.github/actions/templates/avm-validateModulePSRule
        with:
          templateFilePath: "${{ inputs.modulePath }}/${{ matrix.moduleTestFilePaths }}"
          subscriptionId: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          managementGroupId: "${{ secrets.ARM_MGMTGROUP_ID }}"
          psrulePath: "avm/utilities/pipelines/staticValidation/psrule" #'${{ github.workspace }}/avm'